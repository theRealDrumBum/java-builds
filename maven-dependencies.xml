<?xml version="1.0" ?>
<project name="maven-dependencies" xmlns:artifact="urn:maven-artifact-ant">
	<!-- 	Should be used as a ant call task to handle the dependencies of a project.
			This helper class provides common functionality for 'bootstrapping' the maven
			ant tasks jar, copying the dependencies to the target lib, as well as getting the
			classpath (compile and runtime) based off of these dependencies.
			
			Requires the following:
			@param pom			- The pom file to reference
			@param lib.dir		- The lib directory the dependencies should be copied to
			
	-->
	<dirname property="maven-dependencies.basedir" file="${ant.file.maven-dependencies}"/>
	<property	name="maven.pom" 
				value="${pom}" />
	<property	name="maven.lib" 
				value="${lib.dir}" />
	<property	name="maven.ant.tasks.jar" 
				value="maven-ant-tasks-2.1.3.jar" />
	<property	name="maven.ant.tasks.jar.location" 
				value="${maven-dependencies.basedir}/lib/${maven.ant.tasks.jar}" />
	<property	name="maven.ant.tasks.bootstrap.location"
				value="http://apache.mirrors.pair.com/maven/binaries/${maven.ant.tasks.jar}"/>
	<available property="maven.ant.tasks.jar.exists" file="${maven.ant.tasks.jar.location}"/>
	
	
	<!-- Downloads the maven ant task jar if not currently available -->
	<target name="maven.bootstrap" unless="maven.ant.tasks.jar.exists"
			description="Downloads the maven ant tasks jar if not found in expected location">
		<get src="${maven.ant.tasks.bootstrap.location}" dest="${maven.ant.tasks.jar.location}"/>
	</target>
	
	<!-- Uses the maven pom to dowloand dependencies and build a classpath -->
	<target name="maven.dependencies" depends="maven.bootstrap"
			description="Retrieve the dependencies and copies them to the specified lib folder.">
		<echo>Using pom: ${maven.pom}</echo>
		<path id="maven.ant.tasks.classpath" path="${maven.ant.tasks.jar.location}" />
		<typedef 	resource="org/apache/maven/artifact/ant/antlib.xml" 
					uri="urn:maven-artifact-ant" 
					classpathref="maven.ant.tasks.classpath" />  				
		
		<condition 	property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
		    <isset property="maven.repo.local"/>
		</condition>
		
    	<artifact:pom file="${maven.pom}" id="maven.project"/>
    	
    	<artifact:dependencies pathId="maven.compile.classpath" filesetId="maven.compile.fileset" useScope="compile">
        	<pom refid="maven.project"/>
   		</artifact:dependencies>
		<property name="maven.compile.classpath" refid="maven.compile.classpath" />
		
		<artifact:dependencies pathId="maven.runtime.classpath" filesetId="maven.runtime.fileset" useScope="runtime">
		    <pom refid="maven.project"/>
		</artifact:dependencies>
		<property name="maven.runtime.classpath" refid="maven.runtime.classpath" />
	</target>
		
	<!-- Copies the maven dependencies from the local repository and adds them to the specified lib directory -->
	<target name="maven.package" depends="maven.dependencies"
			description="Copies the maven dependencies to the specified lib directory">
		<echo>Packaging ${ant.project.name}</echo>
		<echo>Copying jars to ${maven.lib}</echo>
		<echo>Using pom: ${maven.pom}</echo>
		<copy todir="${maven.lib}">
			<fileset refid="maven.runtime.fileset" />
			<mapper type="flatten"/>
		</copy>
		<path id="runtime.classpath">
			<fileset dir="${maven.lib}" includes="*.jar"/>
		</path>
	</target>
	
	<!-- Installs the specified jar in the local repo -->
	<target name="maven.install" depends="maven.dependencies">
		<artifact:install file="${dist.dir}/${jar}">
			<pom refid="maven.project" />
		</artifact:install>
	</target>

</project>
